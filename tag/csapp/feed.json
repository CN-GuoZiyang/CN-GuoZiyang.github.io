{
    "version": "https://jsonfeed.org/version/1",
    "title": "菜狗の日常 • All posts by \"csapp\" tag",
    "description": "",
    "home_page_url": "https://ziyang.moe",
    "items": [
        {
            "id": "https://ziyang.moe/article/csapplab0.html",
            "url": "https://ziyang.moe/article/csapplab0.html",
            "title": "CSAPP LAB —— 0. 实验环境搭建",
            "date_published": "2021-12-26T16:09:54.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<blockquote>\n<p>学 CSAPP 不做实验，就像四大名著不看红楼梦，说明这个人文学造诣和自我修养不足，他理解不了这种内在的阳春白雪的高雅艺术，他只能看到外表的辞藻堆砌，参不透其中深奥的精神内核，他整个人的层次就卡在这里了，只能度过一个相对失败的人生。</p>\n</blockquote>\n<p>劝退 CSAPP 实验人的最大因素，就是 Linux 环境。本科时候做过一次，用的是 Vmware Workstation 虚拟机平台，安装 Ubuntu Desktop。虽然我个人倒是没遇到过什么问题，但是身边的人遇到过一下问题：</p>\n<ul>\n<li>虚拟机安装错误</li>\n<li>Vmware 与 Hyper-v 不兼容</li>\n<li>虚拟机无网络</li>\n<li>虚拟机与宿主机共享文件夹不好使</li>\n<li>Ubuntu 中文输入法</li>\n<li>其他玄学问题</li>\n</ul>\n<p>另外，虚拟机的性能也是很难恭维，毕竟要从宿主机划出去一片内存，你永远不知道，是虚拟机先 OOM，还是宿主机先 OOM。</p>\n<p>综上，我选择 WSL（Windows Subsystem for Linux，适用于 Windows 的 Linux 子系统）。推荐的操作系统是 Windows 10 Version 2004 以上，或者 Windows 11，以使用 WSL 2。低于此版本的 Windows，即使有 WSL 功能，也只是 WSL 1，使用翻译层将 Linux 系统调用转化成 Windows 系统调用，而 WSL 2 使用了一个轻量级的、无需维护的虚拟机，并在这个虚拟机中运行了一个完整的 Linux 内核。一个完整的 Linux 内核，对于 CSAPP 的实验至关重要。</p>\n<p>什么，你问我 MacOS 怎么办，Intel 芯片的 MacBook 可以安装 VirtualBox、VMWare Fusion 或者 Parallel Desktop，并在其上安装 Linux 发行版，也可以使用 Docker。至于 m1 芯片的 MacBook，<strong>建议换电脑</strong>（不是开玩笑，m1 真的没法做实验）。</p>\n<p>笑死，我发现我废话就真多。</p>\n<h1 id=\"安装-wsl-和-ubuntu\"><a class=\"anchor\" href=\"#安装-wsl-和-ubuntu\">#</a> 安装 WSL 和 Ubuntu</h1>\n<p>Windows 安装 WSL 非常简单，只需要在一个有管理员权限的 PowerShell 中输入如下命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --install -d Ubuntu</pre></td></tr></table></figure><p>系统就会自动配置好所需的功能，并且自动下载 Ubuntu 的最新 LTS（截至本文写作时，版本 20.04）。在下载安装完成后，会弹出一个终端，要求你输入用户名和密码：</p>\n<pre><code>Installing, this may take a few minutes...\nPlease create a default UNIX user account. The username does not need to match your Windows username.\nFor more information visit: https://aka.ms/wslusers\nEnter new UNIX username: ziyang\nNew password:\nRetype new password:\npasswd: password updated successfully\nInstallation successful!\n</code></pre>\n<p>注意，输入密码时是不会显示在屏幕上的。</p>\n<p>配置完成后，一个  <code>ziyang@DESKTOP-4TMFLAE:~$</code>  样式的文字就出现了，等待你输入命令。至此，你已经进入了 Ubuntu 系统。</p>\n<h1 id=\"一些使用小技巧\"><a class=\"anchor\" href=\"#一些使用小技巧\">#</a> 一些使用小技巧</h1>\n<h2 id=\"windows-terminal\"><a class=\"anchor\" href=\"#windows-terminal\">#</a> Windows Terminal</h2>\n<p>Windows Terminal，可以说是 Windows 下的终端之王了。</p>\n<p>安装 Windows Terminal 可以直接在 Microsoft Store 中搜索 “Windows Terminal”，或者在其 Github Releases 页面：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC90ZXJtaW5hbC9yZWxlYXNlcyVFRiVCQyU4QyVFNCVCOCU4QiVFOCVCRCVCRA==\">https://github.com/microsoft/terminal/releases，下载</span> msixbundle 文件，双击即可安装。</p>\n<p>如果你已经安装了 WSL 和 Ubuntu，那么在 Windows Terminal 顶栏加号下拉处，就会显示一个 Ubuntu 的选项。点击即可快速打开 Ubuntu 的默认 shell。</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/006VKfGmly1gxrq1meoapj30jj0actaq.jpg\" alt=\"Windows Terminal\" width=\"400px\" /></p>\n<h2 id=\"文件共享\"><a class=\"anchor\" href=\"#文件共享\">#</a> 文件共享</h2>\n<p>WSL 中的 Ubuntu 和你使用的 Windows，是两个隔离的系统，各自使用自己的文件系统。但是，隔离，但没完全隔离。</p>\n<p>Windows 的 C 盘，在 Ubuntu 中被挂载到了 /mnt/c，例如你要在 Linux 中访问 Windows 的桌面：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> /mnt/c/Users/Ziyang/Desktop</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> course.py     desktop.ini     szxx.bat     szxx.txt</pre></td></tr></table></figure><p>同样，如果想要在 Windows 上查看 WSL 自己的文件系统中的文件（例如～），可以通过如下命令，例如我想查看用户文件夹～：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> ~</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ explorer.exe <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p>这时会打开 Windows 的资源管理器，其中就是你要查看的文件夹的内容。你可以像操作 Windows 自己的文件夹一样操作它。</p>\n<h2 id=\"visual-studio-code\"><a class=\"anchor\" href=\"#visual-studio-code\">#</a> Visual Studio Code</h2>\n<p>vscode，世界上最好的文本编辑器，支持直接打开 WSL 中的文件夹，完全提供本地项目一般的体验。毕竟，不是所有人，都喜欢直接在 vim 里做实验的。</p>\n<p>首先打开 Windows 下的 vscode，在扩展商店中搜索 WSL，并安装 “Remote - WSL”，这个插件一般是这个关键词的第一个搜索结果。</p>\n<p>随后在 Ubuntu 中，在项目文件夹下，输入命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ code <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p>如果是第一次运行这个命令，会首先安装相关的支持组件：</p>\n<pre><code>$ code .\nInstalling VS Code Server for x64 (899d46d82c4c95423fb7e10e68eba52050e30ba3)\nDownloading: 100%\nUnpacking: 100%\n</code></pre>\n<p>随后就会自动打开 Windows 下的 vscode，并将 Ubuntu 中的项目文件夹作为工作目录，随后，想怎么开发就可以怎么开发了。</p>\n<h2 id=\"更换中国源\"><a class=\"anchor\" href=\"#更换中国源\">#</a> 更换中国源</h2>\n<p>首先明确，什么叫源：</p>\n<blockquote>\n<p><s>据古籍记载，天地合气生万物的时代，混沌迷蒙，灵气氤氲，非常浓密，很多灵物可以吸收天地间的本源精气，结出琥珀般的晶体，里面封有庞大的生命精华。</s><br />\n<s>保存到现在的，便被称作 “源”</s></p>\n</blockquote>\n<p>sorry，串了。</p>\n<p>简而言之，就是 Ubuntu，或者说 Debian 系使用的软件包管理器 apt，维护了一个 URL 列表，在用户通过 apt install 安装软件包时，会请求那些 URL 中搜索下载并安装。这个 URL 列表，就是源（sources）默认的 URL 都是国外的地址，由于众所周知的原因，速度很慢，甚至连接不了。所以需要将其更换为国内的源。</p>\n<p>方法如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> /etc/apt/sources.list /etc/apt/sources.list.bak</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/apt/sources.list</pre></td></tr></table></figure><p>将如下内容粘贴进去，这里我使用的是阿里的源。注意，不同的发行版，不同的版本，源是不同的，注意甄别。这里我用的是 Ubuntu 20.04 的源。</p>\n<pre><code>deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\n</code></pre>\n<p>随后刷新源并更新软件包：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade</pre></td></tr></table></figure><h1 id=\"安装实验所需软件\"><a class=\"anchor\" href=\"#安装实验所需软件\">#</a> 安装实验所需软件</h1>\n<h2 id=\"软件包\"><a class=\"anchor\" href=\"#软件包\">#</a> 软件包</h2>\n<p>必要的就一句话：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> build-essential gcc-multilib gdb</pre></td></tr></table></figure><p>可选安装：cgdb。cgdb 是 GDB 的一个轻量级前端。它提供了一个分屏窗口，分别显示 gdb 命令界面（和默认 gdb 一样）和程序源码。由于软件源中的 cgdb 不是最新版本，于是从源码编译安装。方法如下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> automake libncurses5-dev flex texinfo libreadline-dev</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">git</span> clone git://github.com/cgdb/cgdb.git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> cgdb</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ ./autogen.sh</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>$ ./configure --prefix<span class=\"token operator\">=</span>/usr/local</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ <span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><p>安装完成后，就可以在任何位置，通过 cgdb 命令打开了。如下：</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/006VKfGmly1gxrrewr0hqj31fj0tmkhy.jpg\" alt=\"cgdb.png\" width=\"600px\" /></p>\n<p>左侧的窗口被称为代码窗口，右侧为 gdb 窗口。</p>\n<p>打开 cgdb 时，默认两个窗口是上下分隔的，可以通过  <code>ctrl+w</code>  切换成左右分隔模式。</p>\n<p>按 esc 键可以将焦点从 gdb 窗口转移到代码窗口，在代码窗口可以上下翻看源码，空格键可以在焦点行设置一个断点。</p>\n<p>按 i 键可以将焦点从代码窗口转移到 gdb 窗口，在 gdb 窗口的操作与普通 gdb 完全一致。</p>\n<p>更具体的 cgdb 使用可以查看这本 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV5aXcuZ2l0Ym9va3MuaW8vY2dkYi1tYW51YWwtaW4tY2hpbmVzZQ==\">CGDB 中文手册</span>。</p>\n<h2 id=\"实验在哪\"><a class=\"anchor\" href=\"#实验在哪\">#</a> 实验在哪？</h2>\n<p>如果你是自学 CSAPP，可以到这个网站：<span class=\"exturl\" data-url=\"aHR0cDovL2NzYXBwLmNzLmNtdS5lZHUvM2UvbGFicy5odG1s\">http://csapp.cs.cmu.edu/3e/labs.html</span> ，每个实验后的 Self-Study Handout 连接就是实验材料的下载。传入 WSL，就可以快乐实验了！</p>\n",
            "tags": [
                "CSAPP",
                "lab"
            ]
        }
    ]
}